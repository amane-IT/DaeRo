<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.daero.user.mapper.UserMapper">
    <insert id="insertUser" parameterType="string">
        insert into `users` (`user_email`)
            value (#{userEmail})
    </insert>

    <insert id="insertPasswordResetKey" parameterType="com.ssafy.daero.user.dto.PasswordResetDto">
        insert into `password_reset_keys` (`user_seq`, `reset_key`)
        values (#{userSeq}, #{resetKey})
    </insert>

    <insert id="insertEmailVerificationKey" parameterType="com.ssafy.daero.user.dto.EmailVerificationDto">
        insert into `email_verification_keys` (`user_seq`, `verification_key`)
        values (#{userSeq}, #{verificationKey})
    </insert>

    <insert id="insertUserFavor">
        insert into `daero`.`user_favor` (`users_seq`, `tag_seq`, `score`)
        values (#{userSeq}, #{tag}, 10)
    </insert>

    <select id="selectById" parameterType="String" resultMap="mappingUserDto">
        SELECT *
        FROM users
        WHERE `user_email` = #{id};
    </select>

    <select id="selectByUserSeq" parameterType="_int" resultMap="mappingUserDto">
        SELECT *
        FROM users
        WHERE `users_seq` = #{user_seq};
    </select>

    <select id="selectFollowerByUserSeq" resultType="_int">
        SELECT COUNT(*)
        FROM follows
        WHERE `following_users_seq` = #{profile_user_seq}
          AND `follower_users_seq` = #{current_user_seq}
    </select>

    <select id="selectFollowerCountById" parameterType="_int" resultType="_int">
        SELECT COUNT(*)
        FROM follows
        WHERE `following_users_seq` = #{user_seq};
    </select>

    <select id="selectFollowingCountById" parameterType="_int" resultType="_int">
        SELECT COUNT(*)
        FROM follows
        WHERE `follower_users_seq` = #{user_seq};
    </select>

    <select id="selectAllBadgeById" parameterType="_int" resultType="_int">
        SELECT IFNULL(SUM(count), 0)
        FROM user_achievements
        WHERE `users_seq` = #{user_seq};
    </select>

    <select id="selectEmailVerified" parameterType="_int" resultType="com.ssafy.daero.user.dto.UserDto">
        select `users_seq`          as `userSeq`,
               `user_email`         as `userEmail`,
               `password`           as `password`,
               `nickname`           as `nickname`,
               `email_verified_yn`  as `emailVerifiedYn`,
               `suspended_yn`       as `suspendedYn`,
               `profile_image_link` as `profileImageLink`,
               `reported_count`     as `reportedCount`,
               `created_at`         as `createdAt`,
               `del_yn`             as `delYn`,
               `fcm_token`          as `fcmToken`,
               `password_reset_yn`  as `passwordResetYn`
        from `users`
        where `users_seq` = #{userSeq}
    </select>

    <select id="selectNicknameCount" parameterType="string" resultType="_int">
        select count(0)
        from `daero`.`users`
        where `nickname` = #{nickname}
    </select>

    <select id="selectUserByUserEmail" parameterType="string" resultType="com.ssafy.daero.user.dto.UserDto">
        select `users_seq`          as `userSeq`,
               `user_email`         as `userEmail`,
               `password`           as `password`,
               `nickname`           as `nickname`,
               `email_verified_yn`  as `emailVerifiedYn`,
               `suspended_yn`       as `suspendedYn`,
               `profile_image_link` as `profileImageLink`,
               `reported_count`     as `reportedCount`,
               `created_at`         as `createdAt`,
               `del_yn`             as `delYn`,
               `fcm_token`          as `fcmToken`,
               `password_reset_yn`  as `passwordResetYn`
        from `daero`.`users`
        where `user_email` like #{userEmail}
    </select>

    <select id="selectUserByUserSeq" resultType="com.ssafy.daero.user.dto.UserDto">
        select `users_seq`          as `userSeq`,
               `user_email`         as `userEmail`,
               `password`           as `password`,
               `nickname`           as `nickname`,
               `email_verified_yn`  as `emailVerifiedYn`,
               `suspended_yn`       as `suspendedYn`,
               `profile_image_link` as `profileImageLink`,
               `reported_count`     as `reportedCount`,
               `created_at`         as `createdAt`,
               `del_yn`             as `delYn`,
               `fcm_token`          as `fcmToken`,
               `password_reset_yn`  as `passwordResetYn`
        from `users`
        where `users_seq` like #{userSeq}
    </select>

    <select id="selectPlaceTagAll" resultType="_int">
        select `place_tag_seq`
        from daero.place_tags
    </select>

    <select id="selectTagByPlaceSeq" resultType="com.ssafy.daero.trip.vo.RecommendTagVo" parameterType="_int">
        select `trip_places_seq` as `placeSeq`,
               `place_name`      as `placeName`,
               `place_tag_seq`   as `tagSeq`,
               `region_seq`      as `regionSeq`
        from `daero`.`tag_region_place`
        where `trip_places_seq` = #{placeSeq}
    </select>

    <select id="selectPreferencePlace" resultType="com.ssafy.daero.trip.dto.TripPlaceDto" parameterType="_int">
        select `trip_places_seq` as `tripPlaceSeq`,
               `place_name`      as `placeName`,
               `address`         as `address`,
               `latitude`        as `latitude`,
               `longitude`       as `longitude`,
               `description`     as `description`,
               `region_seq`      as `regionSeq`,
               `image_url`       as `imageUrl`
        from `daero`.`trip_places`
        where `trip_places_seq` in (select `place_seq` from `preference_places`)
    </select>

    <update id="updateProfile">
        UPDATE users
        SET `nickname`=#{nickname},
            `profile_image_link` = #{profileUrl}
        WHERE `users_seq` = #{user_seq};
    </update>

    <update id="deleteUser" parameterType="_int">
        UPDATE users
        SET `user_email`=NULL,
            `password`=NULL,
            `nickname`=NULL,
            `email_verified_yn`=NULL,
            `suspended_yn`=NULL,
            `profile_image_link`=NULL,
            `reported_count`=NULL,
            `created_at`=NULL,
            `del_yn`='y',
            `fcm_token`=NULL,
            `password_reset_yn`=NULL
        WHERE `users_seq` = #{user_seq};
    </update>

    <update id="updateUser" parameterType="com.ssafy.daero.user.vo.SignupVo">
        update `daero`.`users`
        set `password`   = #{hashedPassword},
            `nickname`   = #{nickname},
            `created_at` = #{createdAt}
        where `user_email` = #{userEmail};
    </update>

    <update id="updateUserPassword" parameterType="com.ssafy.daero.user.vo.ChangePasswordVo">
        update `daero`.`users`
        set `password` = #{hashedPassword}
        where `users_seq` = #{userSeq}
    </update>

    <update id="updateUserFavor">
        update `user_favor`
        set `score` = `score` + 2
        where `users_seq` = #{userSeq}
          and `tag_seq` = #{tagSeq};
    </update>

    <resultMap id="mappingUserDto" type="com.ssafy.daero.user.vo.UserVo">
        <result property="userSeq" column="users_seq"/>
        <result property="userEmail" column="user_email"/>
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/>
        <result property="emailVerifiedYn" column="email_verified_yn"/>
        <result property="suspendedYn" column="suspended_yn"/>
        <result property="profileImageLink" column="profile_image_link"/>
        <result property="reportedCount" column="reported_count"/>
        <result property="createdAt" column="created_at"/>
        <result property="delYn" column="del_yn"/>
        <result property="fcmToken" column="fcm_token"/>
        <result property="passwordFindYn" column="password_find_yn"/>
        <result property="suspendedExpiry" column="suspended_expiry" />
    </resultMap>
</mapper>